name: Build Multi-Arch Docker Images

on:
  workflow_dispatch:
    inputs:
      tag:
        required: true
        default: "v2.9.2"
        description: The https://github.com/openebs/mayastor-extensions git tag to pull & build

jobs:
  # We need to be able to iterate over the matrix so we set it up on a fake job
  setup:
    runs-on: ubuntu-latest
    outputs:
      # TODO: Also add the `mayastor` repo
      matrix: |
        {
          "runner":[
            "ubuntu-24.04",
            "ubuntu-24.04-arm"
          ],
          "repo":[
            "mayastor",
            "mayastor-extensions",
            "mayastor-control-plane"
          ]
        }
    steps:
      - run: echo "Matrix setup complete"  # This step is required

  build:
    permissions:
      packages: write
    needs: [setup]
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: openebs/${{ matrix.repo }}
          ref: ${{ inputs.tag }}
          submodules: 'recursive'
          fetch-depth: 0
      - run: |
          # BUG: HEAD tag is fetched as lightweight instead of annotated
          # https://github.com/actions/checkout/issues/290
          if [ "${{ github.ref_type }}" == "tag" ]; then
            git fetch -f origin ${{ github.ref }}:${{ github.ref }}
          fi

      - uses: cachix/install-nix-action@v31.3.0
      - name: Patch mayastor on arm64 (add --with-crypto flag to spdk)
        run: sed -Ei 's/(armv8-a\+crypto")/\1 "--with-crypto"/' spdk-rs/build_scripts/build_spdk.sh
        if: ${{ matrix.runner == 'ubuntu-24.04-arm' && matrix.repo == 'mayastor' }}
      - name: Build and push the release images
        # run: ./scripts/release.sh --registry "ghcr.io/${{ github.repository_owner }}"
        run: ./scripts/release.sh --skip-publish --skip-bins

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push single-arch images
        id: push-images
        run: |
          images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>" | sort -u | tr '\n' ' ')
          echo "images='$images'" >> "$GITHUB_OUTPUT"
          mkdir -p artifacts
          for image in $images; do
            [[ "${{ matrix.runner }}" == *-arm ]] && arch="arm64" || arch="amd64"
            new_tag="ghcr.io/${{ github.repository_owner }}/$image-$arch"
            echo "Pushing image '$image' to '$new_tag'"
            docker tag $image $new_tag
            docker push $new_tag

            # Store the base image name for later merging
            echo "$image" >> artifacts/images-${{ matrix.repo }}-${arch}.txt
            echo "✅ Successfully pushed single-arch image for $image"
            cat artifacts/images-${{ matrix.repo }}-${arch}.txt
          done

      - name: Upload image list artifact
        uses: actions/upload-artifact@v4
        with:
          name: images-${{ matrix.repo }}-${{ matrix.runner == 'ubuntu-24.04-arm' && 'arm64' || 'amd64' }}
          path: artifacts/images-*.txt

  merge:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: ${{ fromJson(needs.setup.outputs.matrix).repo }}
    needs:
      - setup
      - build
    steps:
      - name: Download artifacts for this repo
        uses: actions/download-artifact@v4
        with:
          pattern: images-${{ matrix.repo }}-*
          merge-multiple: true
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull, merge & push images
        run: |
          images=$(cat images-${{ matrix.repo }}-*.txt | tr ' ' '\n' | sort -u)
          for image in $images; do
            echo "Merging image '$image'"
            docker pull "ghcr.io/${{ github.repository_owner }}/$image-amd64"
            docker pull "ghcr.io/${{ github.repository_owner }}/$image-arm64"
            docker manifest create "ghcr.io/${{ github.repository_owner }}/$image" \
              --amend "ghcr.io/${{ github.repository_owner }}/$image-amd64" \
              --amend "ghcr.io/${{ github.repository_owner }}/$image-arm64"
            docker manifest push "ghcr.io/${{ github.repository_owner }}/$image"
            echo "✅ Successfully created multi-arch manifest for $image"
          done
